<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:orientation="vertical"
    tools:context="com.example.bulbulhossen.floatinglabels.MainActivity">


    <EditText
        android:id="@+id/txtCapitalize"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:inputType="textCapWords" />

    <!--Android OS itself adds border to EditText when user focus on it. -->
    <!--The color depends on the OS version. Sometimes we might want to get -->
    <!--rid of default focus border and there is a way to do it.-->

    <!--Method : 01-->

    <!--You can keep the background color as transparent to remove -->
    <!--the EditText border on focus.-->



    <EditText
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:background="#00000000"
        android:padding="20dp"
        />


<!--If you want to add rounded corner to any kind of android view like linear layout, -->
    <!--relative layout, button etc., follow the below method-->

    <LinearLayout
        android:layout_marginTop="30dp"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:background="@drawable/rounded_corner_borders">

        <TextView
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:gravity="center"
            android:padding="15dp"
            android:text="Hi, This layout has rounded corner borders ..." />

    </LinearLayout>





</LinearLayout>
